version: '3.7'

services:
    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    kafka:
        image: wurstmeister/kafka
        ports:
            - "${KAFKA_PORT}:${KAFKA_PORT}"
        expose:
            - "${KAFKA_INTERNAL_PORT}"
        links:
            - zookeeper
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://:${KAFKA_INTERNAL_PORT},OUTSIDE://:${KAFKA_PORT}
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://:${KAFKA_INTERNAL_PORT},OUTSIDE://:${KAFKA_PORT}
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
            KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC}:3:1" #topicName:numOfPartition:numOfBroker
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    api:
        build: ./api-kafka
        depends_on:
            - zookeeper
            - kafka
        environment:
            PORT: ${API_PORT}
            KAFKA_HOST: ${KAFKA_HOST}
            KAFKA_PORT: ${KAFKA_PORT}
            KAFKA_TOPIC: ${KAFKA_TOPIC}
            WAIT_MS: ${API_WAIT_MS}
        ports:
            - ${API_PORT}:${API_PORT}
        expose:
            - ${API_PORT}
        links:
            - zookeeper
            - kafka
    app-master:
        build: ./app-master
        depends_on:
            - zookeeper
            - kafka
            - api
        ports:
            - ${REACT_MASTER_PORT}:${REACT_MASTER_PORT}
        expose:
            - ${REACT_MASTER_PORT}
        links:
            - zookeeper
            - kafka
            - api
    app-replicate:
        build: ./app-replicate
        depends_on:
            - zookeeper
            - kafka
            - api
        ports:
            - ${REACT_REPLICATE_PORT}:${REACT_REPLICATE_PORT}
        expose:
            - ${REACT_REPLICATE_PORT}
        links:
            - zookeeper
            - kafka
            - api